#include <vector>
#include <climits>

class Solution {
public:
    int findMinPath(const vector<vector<int>>& grid, int i, int j, vector<vector<int>>& memo) {
        if (i == 0 && j == 0)
            return grid[i][j];

        else if (i < 0 || j < 0)
            return INT_MAX;

        if (memo[i][j] != -1)
            return memo[i][j];

        memo[i][j] = min(findMinPath(grid, i, j - 1, memo), findMinPath(grid, i - 1, j, memo)) + grid[i][j];

        return memo[i][j];
    }

    int minPathSum(const vector<vector<int>>& grid) {
        vector<vector<int>> memo(grid.size(), vector<int>(grid[0].size(), -1));
        return findMinPath(grid, grid.size() - 1, grid[0].size() - 1, memo);
    }
};
