#include <climits> // Required for using INT_MIN

class Solution {
public:
    // Helper function for inorder traversal
    void inorder(TreeNode* root, int &ans, int mini, int maxi) {
        // Base case: if the node is NULL, update the answer and return
        if (root == NULL) {
            ans = max(ans, maxi - mini);
            return;
        }

        // Update the maximum and minimum values encountered so far
        maxi = max(maxi, root->val);
        mini = min(mini, root->val);

        // Recursively traverse the left and right subtrees
        inorder(root->left, ans, mini, maxi);
        inorder(root->right, ans, mini, maxi);
    }

    // Main function to find the maximum difference between values of any two nodes
    int maxAncestorDiff(TreeNode* root) {
        // Initialize minimum, maximum, and answer variables
        int mini = INT_MAX, maxi = INT_MIN;
        int ans = INT_MIN;

        // Perform inorder traversal to calculate the maximum difference
        inorder(root, ans, mini, maxi);

        // Return the result
        return ans;
    }
};
